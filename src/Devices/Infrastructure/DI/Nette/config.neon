doctrine.orm:
	connection:
		types:
			WeatherStationId: Adeira\Connector\Devices\Infrastructure\DomainModel\WeatherStation\Doctrine\DoctrineWeatherStationIdType
			WeatherStationRecordId: Adeira\Connector\Devices\Infrastructure\DomainModel\WeatherStation\Doctrine\DoctrineWeatherStationRecordIdType


services:
	- Adeira\Connector\Devices\Application\Service\WeatherStation\(
		AddWeatherStationRecordService
		ViewAllWeatherStationRecordsService
		ViewAllWeatherStationsService
		ViewSingleWeatherStationService
	)
	- class: Adeira\Connector\Devices\Application\Service\WeatherStation\AddWeatherStationService
	  arguments:
	  	transactionalSession: @doctrineSession # @dummySession
	  	ownerService: @userIdOwnerService # @jwtOwnerService
	weatherStationRecordRepository: Adeira\Connector\Devices\Infrastructure\Persistence\Doctrine\DoctrineWeatherStationRecordRepository
	weatherStationRepository: Adeira\Connector\Devices\Infrastructure\Persistence\Doctrine\DoctrineWeatherStationRepository


symfony.console:
	commands:
		- Adeira\Connector\Devices\Infrastructure\Delivery\Console\Symfony\CreateWeatherStationCommand
		- Adeira\Connector\Devices\Infrastructure\Delivery\Console\Symfony\RecievePacketCommand


graphql:
	queryDefinitions:
		- Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\WeatherStationQueryDefinition
	types:
		- Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\(
			WeatherStationRecordType
			WeatherStationsConnection
			WeatherStationsEdge
			WeatherStationType
		)
