# GraphQL queries are hierarchical and composed, describing a tree of information.
# While Scalar types describe the leaf values of these hierarchical queries, Objects describe the intermediate levels.

graphql:
	queries:
		allCameras:
			resolver: Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\Camera\Query\AllCamerasResolver
			next: [Camera]

	outputTypes:
		Camera:
			resolver: Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\Camera\Type\CameraResolver
			fields:
				id: ID!
				name: String!
				stream: Stream!

		Stream:
			resolver: Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\Camera\Type\StreamResolver(
				Nette\Http\Url(%adeira.streamService.public%)
			)
			fields:
				source: String!
				hls: String!

	mutations:
		createCamera:
			arguments:
				streamSource: String!
				name: String!
			resolver: Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\Camera\Mutation\CreateCameraResolver
			next: Camera

		removeCamera:
			arguments:
				cameraId: ID!
			resolver: Adeira\Connector\Devices\Infrastructure\Delivery\API\GraphQL\Camera\Mutation\RemoveCameraResolver
			next: Camera
